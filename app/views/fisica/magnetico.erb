<!-- MAIN MENU -->
<div class="header" align="center">
  <!-- -->
  <nav class="navbar navbar-inverse">
    <div class="container-fluid">
      <div class="navbar-header">
        <a class="navbar-brand" href="/fisica/authors">PROYECTO FINAL FISICA III</a>
        <!-- <a class="navbar-brand" href="/fisica/authors">PROYECTO FINAL FISICA III</a> -->
      </div>
      <ul class="nav navbar-nav">
        <li><%= link_to "Interaccion entre cargas electricas", fisica_index_path %></li>
        <li>
          <%= link_to "Campo electrico debido cargas en linea infinita", fisica_campoelectrico_path %>
          <!-- <li><a href="/fisica/campoelectrico">Campo electrico debido cargas en linea infinita</a></li> -->
        </li>
        <li class="active"><%= link_to "Campo magnético", fisica_magnetico_path %></li>
      </ul>
    </div>
  </nav>
</div>
<!-- END MENU -->
<div class="page-header">
  <h1>
    <small>Trayectoria de una partícula debido a un campo magnético uniforme</small>
  </h1>
</div>
<!-- KONVA -->

<div id="container4">
</div>

<div>
  <script type="text/javascript">

      //GLOBAL VARIABLES
      let stage = new Konva.Stage({
          container: 'container4',   // id of container <div>
          width: 1200,
          height: 500
      });

      let layer = new Konva.Layer();
      //Campo magnetico
      let Bmag = 60.22; //Teslas
      let Bdir = "cruz"; //Hacia dentro de la pantalla. "punto", hacia fuera de la pantalla.

      //END GLOBAL VARIABLES

      /*** CLASSES **/
      class Particle {

          constructor() {
              this.particle = new Konva.Circle({
                  x: 250,
                  y: 250,
                  radius: 12,
                  fill: 'red',
                  draggable: true
              });
              this.velocity = [15, 0];
          }

          getPart() {
              return this.particle;
          }

          //Dibujar
          draw() {
              layer.add(this.particle);
              layer.draw();
          }
      }
      /*** END **/

      stage.add(layer); //Add layer to stage

      //Crear campo magnetico
      drawCampo(Bdir);
      layer.draw();


      /* Particula */
      let part = new Particle();
      part.draw();

      /* ANIMACIN PARTICULA */
      let anim = new Konva.Animation(function (frame) {

          part.getPart().x(part.getPart().x() + 1);

          /*** CURVAR SI ENTRA EN EL CAMPO MAGNETICO */



          layer.draw();

      });
      anim.start(); //Start animation

      /*** FUNCTIONS ***/
      function drawCampo(direccion) {

          //Dibujar campo B
          let label = new Konva.Label({
              x: 180,
              y: 150,
              opacity: 0.75
          });

          let txt = new Konva.Text({
              text: '',
              fontFamily: 'Calibri',
              fontSize: 18,
              padding: 5,
              fill: 'black'
          });

          if (direccion === "cruz") {
              //Dibujar cruces uniformes
              for (let i = 1; i < 50; i++) {
                  if (i % 10 === 0) {
                      txt.text += "\n";
                  } else {
                      txt.text += "X     ";
                  }
              }

          }
          else {
              //Dibujar puntos uniformes
              //Dibujar cruces uniformes
              for (let i = 1; i < 50; i++) {
                  if (i % 10 === 0) {
                      txt.text += "\n";
                  } else {
                      txt.text += "■     ";
                  }
              }
          }
          label.add(txt);
          layer.add(label);
          layer.draw();
      }

  </script>

</div>